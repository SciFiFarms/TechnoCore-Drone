version: "3.5"

networks:
  drone:
  drone-private:

volumes:
  drone:
  drone-db:

secrets:
  drone_admin_password:
    name: ${STACK_NAME:-technocore}_drone_admin_password
    external: true
  drone_drone_db_password:
    name: ${STACK_NAME:-technocore}_drone_drone_db_password
    external: true
  drone_db_drone_password:
    name: ${STACK_NAME:-technocore}_drone_db_drone_password
    external: true

services:
  # Uncomment this if Traefik will be used for routing traffick to this service.
  ingress:
    networks:
      - drone

  drone:
    deploy:
      labels:
        - traefik.frontend.rule=$DRONE_ROUTING_LABEL
        - traefik.frontend.priority=$DRONE_ROUTING_LABEL_PRIORITY
        # You'll need to set application's port here.
        - traefik.port=SET_ME_PLEASE
        - ${TRAEFIK_BASIC_AUTH}
        - traefik.enable=true
        - traefik.tags=ingress
        - traefik.docker.network=${STACK_NAME:-technocore}_drone
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        - com.ouroboros.enable=true
        #- user-provided-secret-dns_token=drone dns_token
        #- user-provided-secret-dns_user=drone dns_user
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      # Big services will need this modified or removed.
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      # Sometimes you have to pass in ${DOMAIN} to enable the correct link paths to be generated.
      #- MQTT_USER=${drone}
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASSWORD={{"{{DOCKER-SECRET:admin_password}}"}}
    image: ${image_provider:-scififarms}/technocore-drone:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - drone
      - drone-private
    secrets:
      - source: drone_admin_password
        target: admin_password
      - source: drone_drone_db_password
        target: drone_db_password
    volumes:
      # Likely need to change this
      - drone:/var/lib/drone
      - ${DEV_MOUNT_DRONE_MIGRATIONS:-$EMPTY_MOUNT}
